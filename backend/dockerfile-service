# Build Stage
# Use the official Go image from the DockerHub
FROM golang:1.19-alpine as builder

# Set the Current Working Directory inside the container
WORKDIR /app

# Copy go mod and sum files
COPY go.mod go.sum ./

# Download all dependencies. Dependencies will be cached if the go.mod and go.sum files are not changed
RUN go mod download

# Copy the source from the current directory to the Working Directory inside the container
COPY . .

# Build the Go app
# RUN go build -o wallemon main.go
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o wallemon-service cmd/service/main.go

# Final Stage
FROM alpine
# Copy both env files into the image first
COPY config/.env.service.local ./config/.env.service.local
COPY config/.env.service.cloud ./config/.env.service.cloud

# Use the argument to determine which file to rename
ARG ENV=cloud
RUN if [ "$ENV" = "local" ]; then \
    mv ./config/.env.service.local ./config/.env; \
    rm ./config/.env.service.cloud; \
else \
    mv ./config/.env.service.cloud ./config/.env; \
    # Optionally, you can remove the other file if not needed:
    rm ./config/.env.service.local; \
fi
# Ensure you copy the binary with the correct name
COPY --from=builder /app/wallemon-service /app/wallemon-service
CMD ["/app/wallemon-service"]
